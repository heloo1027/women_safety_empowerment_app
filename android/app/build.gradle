// plugins {
//     id "com.android.application"
//     id "kotlin-android"
//     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//     id "dev.flutter.flutter-gradle-plugin"
// }

// def localProperties = new Properties()
// def localPropertiesFile = rootProject.file("local.properties")
// if (localPropertiesFile.exists()) {
//     localPropertiesFile.withReader("UTF-8") { reader ->
//         localProperties.load(reader)
//     }
// }

// def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
// if (flutterVersionCode == null) {
//     flutterVersionCode = "1"
// }

// def flutterVersionName = localProperties.getProperty("flutter.versionName")
// if (flutterVersionName == null) {
//     flutterVersionName = "1.0"
// }

// android {
//     namespace = "com.example.women_safety_empowerment_app"
//     //compileSdk = flutter.compileSdkVersion
//     compileSdk = 35
//     ndkVersion = flutter.ndkVersion

//     compileOptions {
//         //sourceCompatibility = JavaVersion.VERSION_1_8
//         //targetCompatibility = JavaVersion.VERSION_1_8
//         sourceCompatibility = JavaVersion.VERSION_17
//         targetCompatibility = JavaVersion.VERSION_17
//         coreLibraryDesugaringEnabled true
//     }

//     signingConfigs {
//         release {
//             storeFile file(localProperties.getProperty("storeFile"))
//             storePassword localProperties.getProperty("storePassword")
//             keyAlias localProperties.getProperty("keyAlias")
//             keyPassword localProperties.getProperty("keyPassword")
//         }
//     }

//     buildTypes {
//         release {
//             // TODO: Add your own signing config for the release build.
//             // Signing with the debug keys for now, so `flutter run --release` works.
//             signingConfig = signingConfigs.release
//         }
//     }

//     defaultConfig {
//         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//         applicationId = "com.example.women_safety_empowerment_app"
//         // You can update the following values to match your application needs.
//         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//         // minSdk = flutter.minSdkVersion
//         minSdk = 23
//         // targetSdk = flutter.targetSdkVersion
//         targetSdk = 35
//         versionCode = flutterVersionCode.toInteger()
//         versionName = flutterVersionName
//         multiDexEnabled true
//     }

//     // buildTypes {
//     //     release {
//     //         // TODO: Add your own signing config for the release build.
//     //         // Signing with the debug keys for now, so `flutter run --release` works.
//     //         signingConfig = signingConfigs.debug
//     //     }
//     // }
// }

// flutter {
//     source = "../.."
// }

// apply plugin: 'com.google.gms.google-services'

// dependencies {
//     implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//     coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.0.4"
// }


plugins {
    id "com.android.application"
    id "kotlin-android"
    // Flutter Gradle Plugin must be applied after Android & Kotlin
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace = "com.example.women_safety_empowerment_app"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    defaultConfig {
        applicationId = "com.example.women_safety_empowerment_app"
        minSdk = 23
        targetSdk = 35
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file(localProperties.getProperty("storeFile"))
            storePassword localProperties.getProperty("storePassword")
            keyAlias localProperties.getProperty("keyAlias")
            keyPassword localProperties.getProperty("keyPassword")
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "17"
    }
}

flutter {
    source = "../.."
}

apply plugin: "com.google.gms.google-services"

dependencies {
    // Kotlin stdlib already provided by kotlin plugin, no need to add manually
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.0.4"
}
